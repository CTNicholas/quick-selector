{"version":3,"file":"qs.umd.js","sources":["../src/index.js"],"sourcesContent":["/*\r\n * Initialise events and template\r\n */\r\nconst addTemplate = initTemplate()\r\n\r\n/*\r\n * Exports qs function\r\n * Creates new DOM query, and returns templated result\r\n * If element array passed, return templated result\r\n */\r\nmodule.exports = function (literals, ...substitutions) {\r\n  const query = createQuery(literals, substitutions)\r\n  if (isInvalidQuery(query)) return null\r\n  if (isArray(query)) {\r\n    return addTemplate(query)\r\n  } else {\r\n    return newQuerySelector(query)\r\n  }\r\n}\r\n\r\n/*\r\n * Gets elements with querySelectorAll and adds template\r\n * If no elements, return empty array\r\n */\r\nfunction newQuerySelector(query) {\r\n  const elements = Array.from(document.querySelectorAll(query))\r\n  return elements.length > 0 ? addTemplate(elements) : []\r\n}\r\n\r\n/*\r\n * Initialises events and customMethods, then returns a function that applies\r\n * changes to an element list:\r\n\r\n * Each of these properties applies to every element in the array:\r\n * - Adds every type of eventListener to the qs element list's hidden properties\r\n *   qs`.element`.click(clickFunc)\r\n * \r\n * - Adds a .remove property, to remove eventListeners \r\n *   qs`.element`.remove.click(clickFunc)\r\n * \r\n * - Adds set, to set properties of elements\r\n *   qs`.element`.set(el => el.style.color = 'red')\r\n * \r\n * - Adds get, to get an array of properties of elements\r\n *   const getText = qs`.element`.get(el => el.innerHTML) // ['an element', 'inside another']\r\n * \r\n * - Adds only to select a single element from an index, returning an array of 1\r\n *   qs`.element`.only(1) // [ HTMLElement ]\r\n * \r\n * - Modifies the following array methods, to return an array that has been parsed by qs:\r\n *   Filter\r\n *   qs`.element`.filter(el => el.innerHTML.includes('Title'))\r\n */\r\nfunction initTemplate () {\r\n  const events = getAllEvents()\r\n  const customMethods = {\r\n    set: setFunction,\r\n    get: getFunction,\r\n    only: onlyFunction,\r\n    filter: arrayFunction\r\n  }\r\n  return function (elements) {\r\n    const customProps = {}\r\n    const removeEventObject = {}\r\n    events.forEach(event => {\r\n      addAFunction(customProps, event, eventFunction, { elements, event })\r\n      removeEventObject[event] = removeEventFunction({ elements, event })\r\n    })\r\n    customProps.remove = { value: removeEventObject }\r\n    Object.entries(customMethods).forEach(([methodName, methodFunc]) => {\r\n      addAFunction(customProps, methodName, methodFunc, { elements, methodName })\r\n    })\r\n    return Object.defineProperties(elements, customProps)\r\n  }\r\n}\r\n\r\n/*\r\n * Adds a function to customProps, to be used in defuneProperties\r\n */\r\nfunction addAFunction (customProps, propName, propFunc, funcVars) {\r\n  customProps[propName] = {\r\n    value: propFunc(funcVars)\r\n  }\r\n}\r\n\r\n/*\r\n * The next few functions are all non-enumerable properties given to the created qs objects\r\n * Or in one case, an object that enables removes event listeners\r\n * \r\n * Creates an event listener, returns elements\r\n */\r\nfunction eventFunction ({ elements, event }) {\r\n  return function (func) {\r\n    elements.forEach(element => {\r\n      element.addEventListener(event, func)\r\n    })\r\n    return elements\r\n  }\r\n}\r\n\r\n/*\r\n * Removes event listener, returns elements\r\n */\r\nfunction removeEventFunction ({ elements, event }) {\r\n  return function (func) {\r\n    elements.forEach(element => {\r\n      element.removeEventListener(event, func)\r\n    })\r\n    return elements\r\n  }\r\n}\r\n\r\n/*\r\n * Applies array method then returns qs templated array\r\n */\r\nfunction arrayFunction ({ elements, methodName }) {\r\n  return function (func) {\r\n    return addTemplate([][methodName].call(elements, func))\r\n  }\r\n}\r\n\r\n/*\r\n * Cycles through elements letting you edit elements\r\n */\r\nfunction setFunction ({ elements }) {\r\n  return function (func) {\r\n    elements.forEach(func)\r\n    return elements\r\n  }\r\n}\r\n\r\n/*\r\n * Returns elements selected in func\r\n */\r\nfunction getFunction ({ elements }) {\r\n  return function (func) {\r\n    return elements.map(element => func(element))\r\n  }\r\n}\r\n\r\n/*\r\n * Selects an element by index and returns a qs templated array containing it\r\n */\r\nfunction onlyFunction ({ elements }) {\r\n  return function (index) {\r\n    return addTemplate([elements[index]])\r\n  }\r\n}\r\n\r\n/* \r\n * Returns an array of names of all available events\r\n * Will always find a list of events, the second return value is for testing\r\n */\r\nfunction getAllEvents () {\r\n  const allEvents = Object.getOwnPropertyNames(Object.getPrototypeOf(Object.getPrototypeOf(document))).filter(eventName =>\r\n    !eventName.indexOf('on') && (document[eventName] == null || typeof document[eventName] == 'function')\r\n  ).map(eventName => eventName.substr(2))\r\n  return allEvents.length > 0 ? allEvents : ['click', 'mouseover']\r\n}\r\n\r\n/*\r\n * Takes arguments from a tagged template literal\r\n * If valid HTML element array submitted as first argument, return\r\n * Else If array entered as a substitution, and no literals, return substitution array\r\n * Else If return a query string to be used with document.querySelectorAll\r\n * If not valid, return null\r\n */\r\nfunction createQuery (literals, substitutions) {\r\n  if (isArray(literals) && isElement(...literals)) {\r\n    return literals\r\n  } else if (isArray(literals, substitutions)) {\r\n    if (literals.join() === '' && isElement(...substitutions)) {\r\n      return substitutions\r\n    } else {\r\n      return combineTemplateArrays(literals, substitutions) || null\r\n    }\r\n  } else if (isString(literals)) {\r\n    return literals\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\n/*\r\n * Combines two arrays into one string, one index at a time\r\n * If undefined, uses an empty string\r\n */ \r\nfunction combineTemplateArrays(literals, substitutions) {\r\n  return literals.map((literal, index) => {\r\n    return (literal || '') + (substitutions[index] || '')\r\n  }).join('')\r\n}\r\n\r\n/*\r\n * Check if arguments are valid DOM elements\r\n */\r\nfunction isElement (...args) {\r\n  return args.every(arg => arg instanceof Element || arg instanceof HTMLDocument )\r\n}\r\n\r\n/* \r\n * Check if arguments are valid arrays\r\n*/\r\nfunction isArray (...args) {\r\n  return args.every(arg => Array.isArray(arg))\r\n}\r\n\r\n/* \r\n * Check if arguments are valid strings\r\n*/\r\nfunction isString (...args) {\r\n  return args.every(arg => typeof arg === 'string' || arg instanceof String)\r\n}\r\n\r\n/*\r\n * Checks if valid query\r\n */\r\nfunction isInvalidQuery(query) {\r\n  return !query || query.length === 0 || query === '[object Object]'\r\n}"],"names":["events","customMethods","allEvents","addTemplate","Object","getOwnPropertyNames","getPrototypeOf","document","filter","eventName","indexOf","map","substr","length","set","elements","func","forEach","get","element","only","index","methodName","call","customProps","removeEventObject","event","addAFunction","eventFunction","removeEventListener","removeEventFunction","remove","value","entries","defineProperties","newQuerySelector","query","Array","from","querySelectorAll","propName","propFunc","funcVars","addEventListener","createQuery","literals","substitutions","isArray","isElement","join","literal","combineTemplateArrays","every","arg","String","isString","Element","HTMLDocument","isInvalidQuery","module","exports"],"mappings":"6EAGA,IAmDQA,EACAC,EAmGAC,EAvJFC,GAuJED,EAAYE,OAAOC,oBAAoBD,OAAOE,eAAeF,OAAOE,eAAeC,YAAYC,OAAO,SAAAC,UACzGA,EAAUC,QAAQ,QAAiC,MAAvBH,SAASE,IAAoD,mBAAvBF,SAASE,MAC5EE,IAAI,SAAAF,UAAaA,EAAUG,OAAO,KAtG9BZ,EAuGCE,EAAUW,OAAS,EAAIX,EAAY,CAAC,QAAS,aAtG9CD,EAAgB,CACpBa,IAoEJ,gBAAwBC,IAAAA,SACtB,gBAAiBC,GAEf,OADAD,EAASE,QAAQD,GACVD,IAtEPG,IA6EJ,gBAAwBH,IAAAA,SACtB,gBAAiBC,GACf,OAAOD,EAASJ,IAAI,SAAAQ,UAAWH,EAAKG,OA9EpCC,KAqFJ,gBAAyBL,IAAAA,SACvB,gBAAiBM,GACf,OAAOlB,EAAY,CAACY,EAASM,OAtF7Bb,OAwDJ,gBAA0BO,IAAAA,SAAUO,IAAAA,WAClC,gBAAiBN,GACf,OAAOb,EAAY,GAAGmB,GAAYC,KAAKR,EAAUC,gBAxDlCD,GACf,IAAMS,EAAc,GACdC,EAAoB,GAS1B,OARAzB,EAAOiB,QAAQ,SAAAS,GACbC,EAAaH,EAAaE,EAAOE,EAAe,CAAEb,SAAAA,EAAUW,MAAAA,IAC5DD,EAAkBC,GAqCxB,gBAAgCX,IAAAA,SAAUW,IAAAA,MACxC,gBAAiBV,GAIf,OAHAD,EAASE,QAAQ,SAAAE,GACfA,EAAQU,oBAAoBH,EAAOV,KAE9BD,GA1CsBe,CAAoB,CAAEf,SAAAA,EAAUW,MAAAA,MAE7DF,EAAYO,OAAS,CAAEC,MAAOP,GAC9BrB,OAAO6B,QAAQhC,GAAegB,QAAQ,gBAAEK,OACtCK,EAAaH,EAAaF,OAAwB,CAAEP,SAAAA,EAAUO,WAAAA,MAEzDlB,OAAO8B,iBAAiBnB,EAAUS,KAhD7C,SAASW,EAAiBC,GACxB,IAAMrB,EAAWsB,MAAMC,KAAK/B,SAASgC,iBAAiBH,IACtD,OAAOrB,EAASF,OAAS,EAAIV,EAAYY,GAAY,GAqDvD,SAASY,EAAcH,EAAagB,EAAUC,EAAUC,GACtDlB,EAAYgB,GAAY,CACtBR,MAAOS,EAASC,IAUpB,SAASd,SAAiBb,IAAAA,SAAUW,IAAAA,MAClC,gBAAiBV,GAIf,OAHAD,EAASE,QAAQ,SAAAE,GACfA,EAAQwB,iBAAiBjB,EAAOV,KAE3BD,GAuEX,SAAS6B,EAAaC,EAAUC,GAC9B,OAAIC,EAAQF,IAAaG,eAAaH,GAC7BA,EACEE,EAAQF,EAAUC,GACH,KAApBD,EAASI,QAAiBD,eAAaF,GAClCA,EAeb,SAA+BD,EAAUC,GACvC,OAAOD,EAASlC,IAAI,SAACuC,EAAS7B,GAC5B,OAAQ6B,GAAW,KAAOJ,EAAczB,IAAU,MACjD4B,KAAK,IAhBGE,CAAsBN,EAAUC,IAAkB,KAoC/D,WACE,MAAO,yBAAKM,MAAM,SAAAC,SAAsB,iBAARA,GAAoBA,aAAeC,SAnCxDC,CAASV,GACXA,OAmBX,SAASG,IACP,MAAO,yBAAKI,MAAM,SAAAC,UAAOA,aAAeG,SAAWH,aAAeI,eAMpE,SAASV,IACP,MAAO,yBAAKK,MAAM,SAAAC,UAAOhB,MAAMU,QAAQM,KAazC,SAASK,EAAetB,GACtB,OAAQA,GAA0B,IAAjBA,EAAMvB,QAA0B,oBAAVuB,EAhNzCuB,OAAOC,QAAU,SAAUf,GACzB,IAAMT,EAAQQ,EAAYC,8BAC1B,OAAIa,EAAetB,QACfW,EAAQX,GACHjC,EAAYiC,GAEZD,EAAiBC"}