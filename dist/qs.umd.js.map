{"version":3,"file":"qs.umd.js","sources":["../src/index.js"],"sourcesContent":["const addTemplate = createTemplate()\r\n\r\nmodule.exports = function (literals, ...substitutions) {\r\n  const query = createQuery(literals, substitutions)\r\n  if (query === null) return null\r\n  const elements = Array.from(document.querySelectorAll(query))\r\n  return elements.length > 0 ? addTemplate(elements) : null\r\n}\r\n\r\nfunction createTemplate () {\r\n  const events = getAllEvents()\r\n  const customMethods = {\r\n    set: setFunction,\r\n    get: getFunction\r\n  }\r\n  return function (elements) {\r\n    const customProps = {}\r\n    events.forEach(event => {\r\n      addAFunction(customProps, event, eventFunction, { elements, event })\r\n    })\r\n    Object.entries(customMethods).forEach(([methodName, methodFunc]) => {\r\n      addAFunction(customProps, methodName, methodFunc, { elements })\r\n    })\r\n    return Object.defineProperties(elements, customProps)\r\n  }\r\n}\r\n\r\nfunction addAFunction (customProps, propName, propFunc, funcVars) {\r\n  customProps[propName] = {}\r\n  customProps[propName].value = propFunc(funcVars)\r\n}\r\n\r\nfunction eventFunction ({ elements, event }) {\r\n  return function (func) {\r\n    elements.forEach(element => {\r\n      element.addEventListener(event, func)\r\n    })\r\n    return elements\r\n  }\r\n}\r\n\r\nfunction setFunction ({ elements }) {\r\n  return function (func) {\r\n    elements.forEach(func)\r\n    return elements\r\n  }\r\n}\r\n\r\nfunction getFunction ({ elements }) {\r\n  return function (func) {\r\n    return elements.map(element => func(element))\r\n  }\r\n}\r\n\r\nfunction getAllEvents () {\r\n  return Object.getOwnPropertyNames(document).concat(Object.getOwnPropertyNames(Object.getPrototypeOf(Object.getPrototypeOf(document)))).filter(eventName =>\r\n    !eventName.indexOf('on') && (document[eventName] == null || typeof document[eventName] == 'function')\r\n  ).map(eventName => eventName.substr(2))\r\n}\r\n\r\nfunction createQuery (literals, substitutions) {\r\n  if (Array.isArray(literals) && Array.isArray(substitutions)) {\r\n    return literals.map((literal, index) => {\r\n      return (literal || '') + (substitutions[index] || '')\r\n    }).join() || null\r\n  } else if (typeof literals === 'string' || literals instanceof String) {\r\n    return literals\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n"],"names":["events","customMethods","addTemplate","Object","getOwnPropertyNames","document","concat","getPrototypeOf","filter","eventName","indexOf","map","substr","set","elements","func","forEach","get","element","customProps","event","addAFunction","eventFunction","entries","defineProperties","propName","propFunc","funcVars","value","addEventListener","createQuery","literals","substitutions","Array","isArray","literal","index","join","String","module","exports","query","from","querySelectorAll","length"],"mappings":"6EAAA,IAUQA,EACAC,EAXFC,GAUEF,EA6CCG,OAAOC,oBAAoBC,UAAUC,OAAOH,OAAOC,oBAAoBD,OAAOI,eAAeJ,OAAOI,eAAeF,aAAaG,OAAO,SAAAC,UAC3IA,EAAUC,QAAQ,QAAiC,MAAvBL,SAASI,IAAoD,mBAAvBJ,SAASI,MAC5EE,IAAI,SAAAF,UAAaA,EAAUG,OAAO,KA9C9BX,EAAgB,CACpBY,IA6BJ,gBAAwBC,IAAAA,SACtB,gBAAiBC,GAEf,OADAD,EAASE,QAAQD,GACVD,IA/BPG,IAmCJ,gBAAwBH,IAAAA,SACtB,gBAAiBC,GACf,OAAOD,EAASH,IAAI,SAAAO,UAAWH,EAAKG,iBAnCrBJ,GACf,IAAMK,EAAc,GAOpB,OANAnB,EAAOgB,QAAQ,SAAAI,GACbC,EAAaF,EAAaC,EAAOE,EAAe,CAAER,SAAAA,EAAUM,MAAAA,MAE9DjB,OAAOoB,QAAQtB,GAAee,QAAQ,YACpCK,EAAaF,YAAqC,CAAEL,SAAAA,MAE/CX,OAAOqB,iBAAiBV,EAAUK,KAI7C,SAASE,EAAcF,EAAaM,EAAUC,EAAUC,GACtDR,EAAYM,GAAY,GACxBN,EAAYM,GAAUG,MAAQF,EAASC,GAGzC,SAASL,SAAiBR,IAAAA,SAAUM,IAAAA,MAClC,gBAAiBL,GAIf,OAHAD,EAASE,QAAQ,SAAAE,GACfA,EAAQW,iBAAiBT,EAAOL,KAE3BD,GAuBX,SAASgB,EAAaC,EAAUC,GAC9B,OAAIC,MAAMC,QAAQH,IAAaE,MAAMC,QAAQF,GACpCD,EAASpB,IAAI,SAACwB,EAASC,GAC5B,OAAQD,GAAW,KAAOH,EAAcI,IAAU,MACjDC,QAAU,KACgB,iBAAbN,GAAyBA,aAAoBO,OACtDP,OAhEXQ,OAAOC,QAAU,SAAUT,GACzB,IAAMU,EAAQX,EAAYC,8BAC1B,GAAc,OAAVU,EAAgB,YACpB,IAAM3B,EAAWmB,MAAMS,KAAKrC,SAASsC,iBAAiBF,IACtD,OAAO3B,EAAS8B,OAAS,EAAI1C,EAAYY,GAAY"}